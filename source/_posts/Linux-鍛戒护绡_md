---
title: Linux-命令篇
---

### Linux 常用命令

#### 命令提示符

```Linux
[root@bogon ~]# 
```
 如上所示：
       [] ：是centos的提示分隔符，没有特殊的意义
       root ：表示当前的登录用户
       @ ：表示分隔符号，没有特殊的意义
       bogon : 表示当前系统的简写
       ～ ：表示当前用户所在的目录，～就是当前用户的家(home)目录
       # : 命令提示符，可以标识当前登录用户的权限等级，普通用户使用$标识，超级管理员用#标识

#### 	命令格式

![1553455157361](http://39.104.171.29/image/1553455157361.png )

选项存在2种格式

       1.长格式选项 如：--all 
       2.短格式选项 如：-a

#### 目录处理命令

![1553455753059](http://39.104.171.29/image/1553455753059.png )

使用 -a 时会看到有的文件名前有.此时表示此文件为隐藏文件。

使用-l 查看详细信息

![1553456138517](http://39.104.171.29/image/1553456138517.png )

上面1表示此文件的链接计数

![1553456202080](http://39.104.171.29/image/1553456202080.png )

上面的root 表示文件的所有者，也就是文件的创建人或负责人，一个文件只能有一个所有者

![1553456372734](http://39.104.171.29/image/1553456372734.png )

上面表示文件的所属组，一个文件只能拥有一个所有组

在-l 后追加h -lh 表示人性化显示，使文件的大小更直观、

![1553456551687](http://39.104.171.29/image/1553456551687.png )

ls -i 可以获取文件的I节点或获取文件的id号

![1553457241923](http://39.104.171.29/image/1553457241923.png)

![1553457569457](http://39.104.171.29/image/1553457569457.png)

cd - 回到上次操作的目录

cd ~ 回到当前用户的根目录

cd 回到当前用户的根目录

![1553457832770](http://39.104.171.29/image/1553457832770.png)

![1553457956595](http://39.104.171.29/image/1553457956595.png)

![1553458096340](http://39.104.171.29/image/1553458096340.png)

![1553458587530](http://39.104.171.29/image/1553458587530.png)

![1553458964678](http://39.104.171.29/image/1553458964678.png)

tree 命令以目录树的方式显示文件结构信息

使用tree 时可能会遇到command not  found ,这时就需要安装此命令

本人使用的是centos 7 的系统 发现使用yum 无法获取tree的安装包

所以只能使用源码包安装，于是在<ftp://mama.indstate.edu/linux/tree/> 下载了 源码包

在/usr/local/src 下使用make 编译了源码包

#### 文件处理命令

![1553463374927](http://39.104.171.29/image/1553463374927.png)

![1553463888804](http://39.104.171.29/image/1553463888804.png)

cat 适用于查看简短文件内容，如shell脚本

![1553464171496](http://39.104.171.29/image/1553464171496.png)

![1553464603686](http://39.104.171.29/image/1553464603686.png)

less 进入后使用 /关键字 可进行反白关键字高亮显示，同时按N键可以跳到下一个关键字，在高亮的关键字后加入！可以取消高亮效果

![1553465266101](http://39.104.171.29/image/1553465266101.png)

![1553465409489](http://39.104.171.29/image/1553465409489.png)

![1553600438679](http://39.104.171.29/image/1553600438679.png)

![1553601846764](http://39.104.171.29/image/1553601846764.png)

硬链接的生成命令

```shell
ln /tmp/china/changzhi /root/china.hard
```

硬链接 共享文件的inode ,但是文件夹不能创建硬链接。

#### 权限管理命令

权限分为了三类 r w s 读 写 执行

![1553602141983](http://39.104.171.29/image/1553602141983.png)

![1553602447029](http://39.104.171.29/image/1553602447029.png)

![1553603202959](http://39.104.171.29/image/1553603202959.png)

![1553603260245](http://39.104.171.29/image/1553603260245.png)

##### 其他权限管理命令 	

![1553605959901](http://39.104.171.29/image/1553605959901.png)

![1553606015581](http://39.104.171.29/image/1553606015581.png)

![1553606075600](http://39.104.171.29/image/1553606075600.png)

#### 文件搜索命令

##### find

![1553749537377](http://39.104.171.29/image/1553749537377.png)

![1553749679807](http://39.104.171.29/image/1553749679807.png)

-name 加通配符可实现模糊搜索文件

通配符 * 表示多个字符

通配符 ？表示单个字符

![1553752715110](http://39.104.171.29/image/1553752715110.png)

![1553752887543](http://39.104.171.29/image/1553752887543.png)

![1553752983831](http://39.104.171.29/image/1553752983831.png)

##### 其他搜索命令

![1553755683871](http://39.104.171.29/image/1553755683871.png)

此查询基于文件资料库所以，查询时对比find占用系统资源较少。

存在缺陷无法查询tmp目录下的文件

不能实时查询，如果刚创建的数据没有录入文件资料库时。会导致无法查询到文件。此时使用命令

```
updatedb
```

然后再次使用	locate可查找到文件

![1553756124804](http://39.104.171.29/image/1553756124804.png)



![1553756360865](http://39.104.171.29/image/1553756360865.png)

![1553757094395](http://39.104.171.29/image/1553757094395.png)

#### 帮助命令

![1553757468067](http://39.104.171.29/image/1553757468067.png)

帮助命令类型 1表示命令，5表示配置文件

命令名称：whatis

NAME
       whatis - 在 whatis 数据库里查找完整的单词

总览 (SYNOPSIS)
       whatis keyword ...

描述 (DESCRIPTION)
       whatis 命令在一些特定的包含系统命令的简短描述的数据库文件里查找关键字， 然后把 结果送到标准输出。 查找的内容必须完全匹配关键字的才会输出。 whatis 数据库文件是用 /usr/sbin/makewhatis 命令建立的。

参见 (SEE ALSO)
       apropos(1), man(1).

[中文版维护人]
       唐友 <tony_ty@263.net>

[中文版最新更新]
       2001/9/8

[中国Linux论坛man手册页翻译计划]
       http://cmpp.linuxforum.net



命令名称：apropos

NAME
       apropos - 在 whatis 数据库中查找字符串

总览 (SYNOPSIS)
       apropos keyword ...

描述 (DESCRIPTION)
       apropos 命令在一些特定的包含系统命令的简短描述的数据库文件里查找关键字， 然后把 结果送到标准输出。

参见 (SEE ALSO)
       whatis(1), man(1).

[中文版维护人]
       唐友 <tony_ty@263.net>

[中文版最新更新]
       2001/9/20

[中国Linux论坛man手册页翻译计划]
       http://cmpp.linuxforum.net

![1553758782441](http://39.104.171.29/image/1553758782441.png)

#### 用户管理命令

![1553826507188](http://39.104.171.29/image/1553826507188.png)

![1553826897084](http://39.104.171.29/image/1553826897084.png)

![1553826911136](http://39.104.171.29/image/1553826911136.png)

![1553827412666](http://39.104.171.29/image/1553827412666.png)

![1553827301824](http://39.104.171.29/image/1553827301824.png)

![1553828266112](http://39.104.171.29/image/1553828266112.png)

#### 压缩和解压命令

##### 压缩格式

gz  zip  rar    其中 zip 是windos和Linux 都支持的压缩格式

##### 压缩解压命令使用

![1553831418375](http://39.104.171.29/image/1553831418375.png)

![1553831583899](http://39.104.171.29/image/1553831583899.png)

gzip的缺陷就是目前只能压缩文件，并且压缩后是不保留源文件的。

![1553831796484](http://39.104.171.29/image/1553831796484.png)

tar 格式表示打包

![1553832058168](http://39.104.171.29/image/1553832058168.png)

![1553837000891](http://39.104.171.29/image/1553837000891.png)

![1553837160959](http://39.104.171.29/image/1553837160959.png)

unzip 解压文件时出现乱码如何解决，使用命令 unzip -O CP936 压缩包名称 即可。其中-O表示知道文件的编码集，
CP936是IBM code page 中的第936页也就是咋们俗称的GBK。

![1553837197214](http://39.104.171.29/image/1553837197214.png)

![1553837357376](http://39.104.171.29/image/1553837357376.png)

![1553837563419](http://39.104.171.29/image/1553837563419.png)
rar 格式的文件解压或压缩
```Linux
#安装rar shell脚本
 sudo apt install rar

rar x 文件名进行解压
更多信息使用 man rar
```

#### 网络命令

![1553837724986](http://39.104.171.29/image/1553837724986.png)

![1553837906794](http://39.104.171.29/image/1553837906794.png)

![1553838044540](http://39.104.171.29/image/1553838044540.png)

![1553838208557](http://39.104.171.29/image/1553838208557.png)

![1553838404765](http://39.104.171.29/image/1553838404765.png)

mail 命令操作时需要使用CTRL+D 才可生效，如执邮件的删除功能，需要除了使用delete命令后还需使用

CTRL+D才可。

mail 进入使用界面后， h表示查看列表，d表示删除指定的邮件

![1553838607987](http://39.104.171.29/image/1553838607987.png)

![1553838817826](http://39.104.171.29/image/1553838817826.png)

![1553838803865](http://39.104.171.29/image/1553838803865.png)

![1553839077239](http://39.104.171.29/image/1553839077239.png)

![1553841741827](http://39.104.171.29/image/1553841741827.png)

![1553839651829](http://39.104.171.29/image/1553839651829.png)

#### 挂载命令

![1553842448954](http://39.104.171.29/image/1553842448954.png)

#### 开关机命令

![1554102568116](http://39.104.171.29/image/1554102568116.png)

![1554102608485](http://39.104.171.29/image/1554102608485.png)

![1554102624441](http://39.104.171.29/image/1554102624441.png)

![1554102670799](http://39.104.171.29/image/1554102670799.png)

![1554102699933](http://39.104.171.29/image/1554102699933.png)

![1554102724817](http://39.104.171.29/image/1554102724817.png)

修改系统默认运行级别代码

```shell
init 2
```

![1554102791796](http://39.104.171.29/image/1554102791796.png) 

查看系统存储信息
```Linux
/proc/meminfo 
```
#### 工具版本切换

java jdk版本切换
```linux
jdk 版本切换：sudo update-alternatives --config java
```
#### 查看系统进程

```linux
ps aux |grep java
```
#### nohup 和&

##### nohup

简介：nohup 命令运行由 Command参数和任何相关的 Arg参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示“and”的符号）到命令的尾部。

nohup 是 no hang up 的缩写，就是不挂断的意思。

nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。

在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中。

关键词：0 – stdin (standard input)，1 – stdout (standard output)，2 – stderr (standard error) ；

案例：

```linux

nohup python MM3Spider.py > python_info.log 2>&1 
```
上面的案例表示以不挂断的形式执行MM3Spider.py文件 并将标准异常流（standard error）输入到标准输出流中，并且将标准输出流的信息输入 python_info.log文件中

##### &

简介：后台执行某段命令

##### nohup 和 &的区别

&是指在后台运行，但当用户推出(挂起)的时候，命令自动也跟着退出，nohup ： 不挂断的运行，注意并没有后台运行的功能，，就是指，用nohup运行命令可以使命令永久的执行下去，和用户终端没有关系，例如我们断开SSH连接都不会影响他的运行，注意了nohup没有后台运行的意思；&才是后台运行

通常我们组合使用如下

```linux

nohup python MM3Spider.py > python_info.log 2>&1 &
```
#### uname

简介： print system information

  -a, --all
              print  all  information,  in the following order, except omit -p
              and -i if unknown:

```linux
uname -a
```

